#!/bin/bash

# wrapper script for running racon polishing multiple times
#
# Exampe usage for two rounds of polishing the assembly in assembly.fa using the reads in reads.fq.gz
# raconnn 2 reads.fastq.gz assembly.fa > polished_assembly.fa
#
# Download: github.com/pmenzel/raconnn
#

threads=4

command -v racon >/dev/null 2>/dev/null || { echo "Error: racon not found" >&2; exit 1; }
command -v minimap2 >/dev/null 2>/dev/null || { echo "Error: minimap2 not found" >&2; exit 1; }
command -v seq >/dev/null 2>/dev/null || { echo "Error: seq not found" >&2; exit 1; }

#test arguments, must be numer of iterations, fastq, and fasta
[ -z "$1" ] && { echo "Specify number of iterations as first argument" >&2; exit 1; }
[ -z "$2" -o ! -s "$2" ] && { echo "Specify reads fastq file as second argument" >&2; exit 1; }
[ -z "$3" -o ! -s "$3" ] && { echo "Specify assembly fasta file as third argument" >&2; exit 1; }

set -Eeo pipefail

DIR_temp=$(mktemp -d --suffix=.raconnn)
trap "rm -r $DIR_temp" EXIT

cp $3 $DIR_temp/prev.fa

for i in `seq 1 $1`
do
	echo "Polishing round $i / $1" >&2
	minimap2 -ax map-ont -t $threads $DIR_temp/prev.fa $2 > $DIR_temp/map.sam
	racon --threads $threads --include-unpolished $2 $DIR_temp/map.sam $DIR_temp/prev.fa > $DIR_temp/polished.fa
	mv $DIR_temp/polished.fa $DIR_temp/prev.fa

done

cat $DIR_temp/prev.fa

